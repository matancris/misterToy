{"version":3,"sources":["assets/img/default.jpg","services/toyService.js","store/actions/toyActions.js","cmps/ToyPreview.jsx","cmps/ToyList.jsx","cmps/ToyFilter.jsx","pages/ToyApp.jsx","services/httpService.js","services/reviewService.js","cmps/ReviewAdd.jsx","store/actions/reviewActions.js","cmps/ReviewPreview.jsx","cmps/ReviewList.jsx","services/socketService.js","cmps/ChatRoom.jsx","pages/ToyDetails.jsx","services/cloudinaryService.js","pages/ToyEdit.jsx","pages/Home.jsx","cmps/GoogleMap.jsx","pages/About.jsx","services/userService.js","cmps/Header.jsx","store/actions/userActions.js","pages/Login.jsx","pages/Signup.jsx","App.jsx","serviceWorker.js","store/reducers/reviewReducer.js","store/reducers/toyReducer.js","store/reducers/userReducer.js","store/store.js","index.js"],"names":["module","exports","axios","Axios","create","withCredentials","resolveData","res","data","toyService","query","filterBy","queryParams","URLSearchParams","name","set","inStock","type","sortBy","get","then","getById","toyId","remove","delete","save","toy","_id","put","post","loadToys","dispatch","toys","addToy","isShown","msg","ToyPreview","connect","state","loggedinUser","userReducer","props","className","src","imgUrl","require","alt","to","isAdmin","onClick","onDeleteToy","ToyList","map","key","ToyFilter","filter","handleChange","ev","persist","value","target","checked","setState","prevState","onSetFilter","onFilter","preventDefault","this","onSubmit","TextField","label","id","onChange","htmlFor","Checkbox","color","style","width","select","MenuItem","Component","_ToyApp","onSetSort","onDelete","removeToy","mapDispatchToProps","ToyApp","toyReducer","endpoint","ajax","a","method","url","console","log","dir","response","status","window","location","assign","add","queryStr","httpService","reviewId","review","addedReview","_ReviewAdd","rate","content","elInput","React","createRef","onInputChange","submitReview","addReview","cols","rows","placeholder","reviewService","ReviewAdd","ReviewPreview","repeat","ReviewList","reviews","length","socket","setup","io","terminate","on","eventName","cb","off","emit","ChatRoom","from","txt","msgs","topic","isTyping","typingMsg","onTyping","addMsg","newMsg","sendMsg","socketService","username","timeoutFunction","msgHandleChange","clearTimeout","timeout","setTimeout","userName","height","lineHeight","idx","autoComplete","_ToyDetails","loadToy","loadReviews","match","params","price","ToyDetails","reviewReducer","cloudinaryService","uploadImg","UPLOAD_URL","formData","FormData","append","files","fetch","body","json","TextFieldOutlined","variant","_ToyEdit","prevProps","img","updatedToy","secure_url","editToy","initialValues","validate","formValues","values","setSubmitting","history","push","isSubmitting","as","component","cursor","onUpdateImg","hidden","Button","disabled","goBack","ToyEdit","_Home","getToysDataByType","reduce","acc","getToysDataByYear","mapByYear","toyCreationYear","Date","createdAt","getFullYear","years","Object","keys","dataPrice","labels","datasets","backgroundColor","borderColor","borderWidth","hoverBackgroundColor","toysByYear","dataYear","hoverBorderColor","Fragment","Home","_GoogleMap","center","store1Coord","lat","lng","store2Coord","store3Coord","centerByStor","storCoord","onMarkerClick","marker","event","position","onMapClicked","mapProps","latLng","containerStyle","border","marginBottom","boxShadow","initialCenter","google","zoom","GoogleMap","GoogleApiWrapper","apiKey","About","userService","login","logout","signup","getUsers","userId","update","user","userCred","_handleLogin","sessionStorage","clear","setItem","JSON","stringify","Header","withRouter","AppBar","Toolbar","onLogout","_Login","password","onLogin","userCreds","Login","_Signup","fullName","onSignup","signupCreds","Signup","App","path","Boolean","hostname","initialState","localLoggedinUser","parse","mainReducer","combineReducers","action","newToys","slice","toyIdx","findIndex","updateToys","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.f1192dff.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/default.5a45102b.jpg\";","import Axios from 'axios'\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/toy'\r\n    : '//localhost:3030/api/toy'\r\n\r\n\r\nconst axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nconst resolveData = res => res.data\r\n\r\nexport const toyService = {\r\n    query,\r\n    getById,\r\n    remove,\r\n    save\r\n}\r\n\r\nfunction query(filterBy = {}) {\r\n    \r\n    var queryParams = new URLSearchParams()\r\n    if (filterBy.name) queryParams.set('q', filterBy.name)\r\n    if (filterBy.inStock) queryParams.set('inStock', filterBy.inStock)\r\n    if (filterBy.type) queryParams.set('type', filterBy.type)\r\n    if (filterBy.type) queryParams.set('sort', filterBy.sortBy)\r\n    \r\n    return axios.get(`${BASE_URL}?${queryParams}`)\r\n        .then(resolveData)\r\n}\r\n\r\n\r\n\r\nfunction getById(toyId) {\r\n    return axios.get(`${BASE_URL}/${toyId}`)\r\n        .then(resolveData)\r\n}\r\n\r\n\r\nfunction remove(toyId) {\r\n    return axios.delete(`${BASE_URL}/${toyId}`)\r\n}\r\n\r\nfunction save(toy) {\r\n    if (toy._id) {\r\n        return axios.put(`${BASE_URL}/${toy._id}`, toy)\r\n    } else {\r\n        return axios.post(BASE_URL, toy).then(resolveData)\r\n    }\r\n}\r\n","import { toyService } from \"../../services/toyService\"\r\n\r\n\r\nexport function loadToys(filterBy){\r\n    return dispatch => {\r\n        toyService.query(filterBy).then(toys => {\r\n            dispatch({type: 'SET_TOYS', toys })\r\n        })\r\n    }\r\n}\r\n\r\nexport function addToy(toy) {\r\n    return dispatch => {\r\n        toyService.save(toy)\r\n            .then((toy) => {\r\n                dispatch({ type: 'ADD_TOY', toy })\r\n                dispatch({ type: 'NOTIFY', isShown: true, msg: 'Added seccessfuly'})\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport function editToy(toy) {\r\n    return dispatch => {\r\n        toyService.save(toy)\r\n            .then((toy) => {\r\n                dispatch({ type: 'EDIT_TOY', toy })\r\n                dispatch({ type: 'NOTIFY', isShown: true, msg: 'Added seccessfuly'})\r\n                \r\n            })\r\n    }\r\n}\r\n\r\nexport function removeToy(id) {\r\n    return dispatch => {\r\n        toyService.remove(id)\r\n            .then(() => {\r\n                dispatch({ type: 'REMOVE_TOY', id })\r\n                dispatch({ type: 'NOTIFY', isShown: true, msg: 'Removed seccessfuly'})\r\n            })\r\n    }\r\n}","\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\n\r\nexport function _ToyPreview(props) {\r\n    const { toy, loggedinUser } = props\r\n\r\n    return (\r\n        <div className=\"toy-preview card flex space-around column align-center\">\r\n            <img src={toy.imgUrl ? toy.imgUrl : require(`../assets/img/default.jpg`)} alt=\"\" />\r\n            {toy.name}\r\n            <div className=\"edit-toy-btns flex\">\r\n                <Link to={`/toy/${toy._id}`}>Details</Link>\r\n                {loggedinUser && loggedinUser.isAdmin && <Link to={`/toy/edit/${toy._id}`}>Edit</Link>}\r\n                {loggedinUser && loggedinUser.isAdmin && <button onClick={() => props.onDeleteToy(toy._id)}>X</button>}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedinUser: state.userReducer.loggedinUser\r\n    }\r\n}\r\n\r\n\r\n\r\nexport const ToyPreview = connect(mapStateToProps)(_ToyPreview)\r\n\r\n","import React from 'react'\r\nimport { ToyPreview } from './ToyPreview'\r\n\r\nexport  function ToyList({toys, onDeleteToy}) {\r\n    return (\r\n        <div className=\"toy-list flex flex-wrap justify-center\">\r\n            {\r\n                toys.map(toy => <ToyPreview toy={toy} key= { toy._id } onDeleteToy={onDeleteToy}/>)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { MenuItem, TextField, Checkbox } from '@material-ui/core'\r\n\r\nexport class ToyFilter extends Component {\r\n    state = {\r\n        filter: {\r\n            name: '',\r\n            inStock: false,\r\n            type: '',\r\n            sortBy: ''\r\n        }\r\n    }\r\n\r\n    handleChange = (ev) => {\r\n        ev.persist()\r\n\r\n        const value = (ev.target.type === 'checkbox') ? ev.target.checked : ev.target.value\r\n        this.setState(prevState => ({ filter: { ...prevState.filter, [ev.target.name]: value } }), () => {\r\n            this.props.onSetFilter(this.state.filter)\r\n\r\n        })\r\n        \r\n    }\r\n    onFilter = (ev) => {\r\n        ev.preventDefault()\r\n        this.props.onSetFilter(this.state.filter)\r\n    }\r\n\r\n    render() {\r\n        const { name } = this.state.filter\r\n        return (\r\n            <form onSubmit={this.onFilter} className=\"form-filter flex space-evenely flex-1 align-center\">\r\n                <TextField type=\"text\" name=\"name\" label=\"By name\" id=\"name\" value={name} onChange={this.handleChange} />\r\n                <label htmlFor=\"inStock\">only in stock\r\n                <Checkbox type=\"checkbox\" name=\"inStock\" id=\"inStock\" color=\"primary\" onChange={this.handleChange} />\r\n                </label>\r\n                <TextField id=\"select\" label=\"type\" style={{width : '60px'}} select>\r\n                    <MenuItem value=\"\" >All</MenuItem>\r\n                    <MenuItem value=\"Educational\">Educational</MenuItem>\r\n                    <MenuItem value=\"Funny\">Funny</MenuItem>\r\n                    <MenuItem value=\"Adult\">Adult</MenuItem>\r\n                </TextField>\r\n                {/* <select name=\"sort\" id=\"\" onChange={this.handleChange}>\r\n                    <option value=\"\">All</option>\r\n                    <option value=\"name\">name</option>\r\n                    <option value=\"price\">price</option>\r\n                </select> */}\r\n                <button>Filter</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n","import { Link } from 'react-router-dom'\r\n\r\nimport React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { loadToys, removeToy, addToy } from '../store/actions/toyActions'\r\nimport { ToyList } from '../cmps/ToyList'\r\nimport { ToyFilter } from '../cmps/ToyFilter'\r\n\r\n\r\nexport class _ToyApp extends Component {\r\n\r\n    state = {\r\n        filterBy: '',\r\n        sortBy: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.loadToys()\r\n    }\r\n\r\n    onSetFilter = (filterBy) => {\r\n        this.setState({ filterBy }, () => this.props.loadToys(this.state.filterBy))\r\n    }\r\n\r\n    onSetSort = (sortBy) => {\r\n        this.setState({ sortBy }, () => this.props.loadToys(this.state.sortBy))\r\n    }\r\n\r\n    onDelete = (toyId) => {\r\n        this.props.removeToy(toyId)\r\n    }\r\n\r\n\r\n    render() {\r\n        const { toys, loggedinUser } = this.props\r\n        if (!toys) return <div>Loading...</div>\r\n        return (\r\n            <div>\r\n                <div className=\"add-filter flex align-center space-around\">\r\n                {loggedinUser && loggedinUser.isAdmin && <Link to=\"/toy/edit\" className=\"add-btn\">+</Link>}\r\n                <ToyFilter onSetFilter={this.onSetFilter} />\r\n                </div>\r\n                {/* <IconButton aria-label=\"delete\">\r\n                 <Icon style={{ fontSize: 30} } backgrounColor=\"primary\" >+</Icon>\r\n                </IconButton> */}\r\n                <ToyList toys={toys} onDeleteToy={this.onDelete} />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys,\r\n        loggedinUser: state.userReducer.loggedinUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadToys,\r\n    removeToy,\r\n    addToy\r\n}\r\n\r\nexport const ToyApp = connect(mapStateToProps, mapDispatchToProps)(_ToyApp)","import Axios from 'axios';\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n});\r\n\r\nexport default {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'get', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data\r\n        })\r\n        return res.data;\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`);\r\n        console.dir(err);\r\n        if (err.response && err.response.status === 401) {\r\n            window.location.assign('/#/login');\r\n        }\r\n        throw err;\r\n    }\r\n}","import httpService from './httpService';\r\n\r\nexport default {\r\n  add,\r\n  query,\r\n  remove\r\n};\r\n\r\n\r\n// return axios.get('api/toy/?id=1223&balance=13');\r\n// return axios.get('api/toy/?', {params: {id: 1223, balanse:13}});\r\n\r\n\r\nfunction query(filterBy) {\r\n  if (filterBy) var queryStr = `?toyId=${filterBy.toyId}`;\r\n  return httpService.get(`review${queryStr || ''}`);\r\n}\r\n\r\nfunction remove(reviewId) {\r\n  return httpService.delete(`review/${reviewId}`);\r\n}\r\nasync function add(review) {\r\n  const addedReview  = await httpService.post(`review`, review);\r\n  return  addedReview\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addReview } from '../store/actions/reviewActions';\r\n\r\nclass _ReviewAdd extends React.Component {\r\n\r\n    state = {\r\n        review: {\r\n            toyId: '',\r\n            // fullName: '',\r\n            rate: 0,\r\n            // date: '',\r\n            content: ''\r\n        }\r\n    }\r\n\r\n\r\n    elInput = React.createRef()\r\n\r\n    componentDidMount() {\r\n        // const { id } = this.props.toyId\r\n        // toyService.getById(id).then(toy => this.setState({ toy }))\r\n        this.setState({review : {toyId: this.props.toyId}})\r\n        // this.elInput.current.focus()\r\n    }\r\n\r\n    onInputChange = (ev) => {\r\n        this.setState(\r\n            {\r\n                review: { ...this.state.review, [ev.target.name]: ev.target.value }\r\n            }\r\n        )\r\n    }\r\n\r\n    submitReview = (ev) => {\r\n        ev.preventDefault();\r\n        this.props.addReview(this.state.review)\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form className=\"review-form flex column align-center\" onSubmit={this.submitReview}>\r\n                    <h4>rate this toy!</h4>\r\n                    {/* <input ref={this.elInput} name=\"fullName\" type=\"text\" placeholder=\"Enter your full name\" onChange={this.onInputChange} /> */}\r\n                    <select name=\"rate\" id=\"\" className=\"rating-drop\" onChange={this.onInputChange}>\r\n                        <option value=\"1\">1</option>\r\n                        <option value=\"2\">2</option>\r\n                        <option value=\"3\">3</option>\r\n                        <option value=\"4\">4</option>\r\n                        <option value=\"5\">5</option>\r\n                    </select>\r\n                    {/* <input name=\"date\" type=\"date\" onChange={this.onInputChange} /> */}\r\n                    <textarea name=\"content\" id=\"\" cols=\"30\" rows=\"5\" placeholder=\"write your review here\" onChange={this.onInputChange}></textarea>\r\n                    <button className=\"review-btn\">submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    addReview\r\n}\r\n\r\nexport const ReviewAdd = connect(mapStateToProps, mapDispatchToProps)(_ReviewAdd)","import reviewService from '../../services/reviewService';\r\n\r\nexport function loadReviews(toyId) {\r\n  return async dispatch => {\r\n    try {\r\n      const reviews = await reviewService.query(toyId);\r\n      dispatch({ type: 'SET_REVIEWS', reviews });\r\n\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadReviews', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function addReview(review) {\r\n  return async dispatch => {\r\n    try {\r\n      const addedReview = await reviewService.add(review);\r\n      console.log(\"addReview -> addedReview\", addedReview)\r\n      dispatch({ type: 'REVIEW_ADD', review: addedReview });\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in addReview', err);\r\n    }\r\n  };\r\n}\r\n","import React from 'react'\r\n\r\n\r\nexport function ReviewPreview(props) {\r\n    if (!props.review) return 'Be the first one to give a review!'\r\n    return (\r\n        <ul className=\"review-container\">\r\n            <li className=\"flex justify-center column align-center\">\r\n                <h2>{'⭐'.repeat(props.review.rate)}</h2>\r\n                <p>\"{props.review.content}\"</p>\r\n            </li>\r\n        </ul>\r\n    )\r\n}","import React from 'react'\r\nimport { ReviewPreview } from './ReviewPreview'\r\n\r\nexport  function ReviewList({reviews}) {\r\n    if (!reviews.length || !reviews) return <div>No reviews yet</div>;\r\n    return (\r\n        <div className=\"review-list flex flex-wrap justify-center\">\r\n            {\r\n                reviews.map(review => <ReviewPreview review={review} key= { review._id } />)\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import io from 'socket.io-client';\r\n\r\nconst BASE_URL =\r\n  process.env.NODE_ENV === 'production' ? '/' : '//localhost:3030';\r\n\r\nlet socket;\r\n\r\nexport default {\r\n  setup,\r\n  terminate,\r\n  on,\r\n  off,\r\n  emit\r\n};\r\n\r\nfunction setup() {\r\n  socket = io(BASE_URL);\r\n}\r\n\r\nfunction terminate() {\r\n  socket = null;\r\n}\r\n\r\nfunction on(eventName, cb) {\r\n  socket.on(eventName, cb);\r\n}\r\n\r\nfunction off(eventName, cb) {\r\n  socket.off(eventName, cb);\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n  socket.emit(eventName, data);\r\n}\r\n","import React, { Component } from 'react';\r\nimport socketService from '../services/socketService';\r\n\r\n\r\nexport default class ChatRoom extends Component {\r\n\r\n    state = {\r\n        msg: { from: 'Me', txt: '' },\r\n        msgs: [],\r\n        topic: '',\r\n        isTyping: false,\r\n        typingMsg: ''\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.setState({ topic: this.props.toyId, msg: { from: this.props.username, txt: '' } })\r\n        socketService.setup();\r\n        socketService.emit('chat topic', this.state.topic);\r\n        socketService.on('chat addMsg', this.addMsg);\r\n        socketService.on('chat typing', this.onTyping);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        socketService.off('chat addMsg', this.addMsg);\r\n        socketService.terminate();\r\n    }\r\n\r\n    onTyping = typingMsg => {\r\n        this.setState({ typingMsg })\r\n    }\r\n\r\n    addMsg = newMsg => {\r\n        this.setState(prevState => ({ msgs: [...prevState.msgs, newMsg] }));\r\n    };\r\n\r\n    //   changeTopic = () => {\r\n    //     socketService.emit('chat topic', this.state.topic);\r\n    //   };\r\n\r\n    sendMsg = ev => {\r\n        ev.preventDefault();\r\n        socketService.emit('chat newMsg', this.state.msg);\r\n        this.setState({ msg: { from: this.props.username, txt: '' } });\r\n    };\r\n\r\n    //   handleChange = ev => {\r\n    //     const { name, value } = ev.target;\r\n    //     this.setState({ [name]: value }, () => this.changeTopic(value));\r\n    //   };\r\n\r\n    // msgHandleChange = ev => {\r\n    //     const { name, value } = ev.target;\r\n    //     this.setState(prevState => {\r\n    //         return {\r\n    //             msg: {\r\n    //                 ...prevState.msg,\r\n    //                 [name]: value\r\n    //             },\r\n    //             isTyping: true\r\n    //         };\r\n    //     });\r\n    // };\r\n\r\n    timeoutFunction = () => {\r\n        this.setState({ isTyping: false });\r\n        socketService.emit('chat typing', '');\r\n    }\r\n\r\n    msgHandleChange = async ev => {\r\n        var timeout;\r\n        if (!this.state.isTyping) {\r\n            clearTimeout(timeout);\r\n            this.setState({ isTyping: true });\r\n            const userName = this.props.username;\r\n            const typingMsg = userName + ' is typing...';\r\n            socketService.emit('chat typing', typingMsg);\r\n            timeout = setTimeout(this.timeoutFunction, 1000);\r\n        } else {\r\n            clearTimeout(timeout);\r\n            timeout = setTimeout(this.timeoutFunction, 1000);\r\n        }\r\n        const { name, value } = ev.target;\r\n        await this.setState(prevState => {\r\n            return {\r\n                msg: {\r\n                    ...prevState.msg,\r\n                    [name]: value,\r\n                }\r\n            };\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"chat-room flex column space-between align-center\">\r\n                {/* <h1>About Us</h1> */}\r\n                {/* <p>We like You</p> */}\r\n                <h2>Chat about this toy!</h2>\r\n                <div style={{ height: '30px', lineHeight: 0 }}>\r\n                    {this.state.typingMsg && <h3>{this.state.typingMsg}</h3>}\r\n                </div>\r\n                <ul className=\"clean-list flex column\">\r\n                    {this.state.msgs.map((msg, idx) => (\r\n                        <li key={idx}>{`${msg.from}: ${msg.txt}`}</li>\r\n                    ))}\r\n                </ul>\r\n                <form className=\"flex\" onSubmit={this.sendMsg}>\r\n                    <input\r\n                        autoComplete=\"off\"\r\n                        type=\"text\"\r\n                        value={this.state.msg.txt}\r\n                        onChange={this.msgHandleChange}\r\n                        name=\"txt\"\r\n                    />\r\n                    <button>Send</button>\r\n                </form>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { toyService } from '../services/toyService'\r\nimport { Link } from 'react-router-dom';\r\nimport { ReviewAdd } from '../cmps/ReviewAdd'\r\nimport { loadReviews } from '../store/actions/reviewActions';\r\nimport { connect } from 'react-redux';\r\nimport { ReviewList } from '../cmps/ReviewList';\r\nimport ChatRoom from '../cmps/ChatRoom';\r\n\r\n\r\nclass _ToyDetails extends Component {\r\n    state = {\r\n        toy: null,\r\n        loggedinUser: ''\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.loadToy()\r\n        this.loadReviews()\r\n    }\r\n\r\n    loadReviews() {\r\n        const id = this.props.match.params.toyId\r\n        this.props.loadReviews({ toyId: id })\r\n    }\r\n\r\n    async loadToy() {\r\n        const id = this.props.match.params.toyId\r\n        const toy = await toyService.getById(id)\r\n        this.setState({ toy })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    render() {\r\n        const { toy } = this.state\r\n        const loggedinUser = this.props.loggedinUser\r\n        if (!toy) return <div>Loading...</div>\r\n        return (\r\n            <div className=\"toy-details flex column justufy-center align-center\">\r\n                <div className=\"chat-details-container flex space-around\">\r\n                <img src={toy.imgUrl ? toy.imgUrl : require(`../assets/img/default.jpg`)} alt=\"\" />\r\n                    <div className=\"details-container flex column justify-center align-center\">\r\n                        <h1>name: {toy.name}</h1>\r\n                        <h1>price: ${toy.price}</h1>\r\n                        <h1>type: {toy.type}</h1>\r\n                        <h1>in stock? {toy.inStock ? 'yes' : 'no'}</h1>\r\n                    </div>\r\n                    {loggedinUser && <ChatRoom toyId={toy._id} username={this.props.loggedinUser.username} />}\r\n                </div>\r\n                <ReviewList reviews={this.props.reviews} />\r\n                <ReviewAdd toyId={toy._id} />\r\n                <Link to=\"/toy\" >Back to list</Link>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        reviews: state.reviewReducer.reviews,\r\n        loggedinUser: state.userReducer.loggedinUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadReviews\r\n}\r\n\r\nexport const ToyDetails = connect(mapStateToProps, mapDispatchToProps)(_ToyDetails)\r\n\r\n","\nexport const cloudinaryService = {\n    uploadImg\n  };\n\nasync function uploadImg(ev) {\n    const CLOUD_NAME = \"dawzeno7k\"\n    const UPLOAD_URL = `https://api.cloudinary.com/v1_1/${CLOUD_NAME}/image/upload`\n\n    const formData = new FormData();\n    console.dir(ev.target)\n    formData.append('file', ev.target.files[0])\n    formData.append('upload_preset', 'fvxb6by1');\n    try {\n        const res = await fetch(UPLOAD_URL, {\n            method: 'POST',\n            body: formData\n        })\n        const data = await res.json()\n        return data\n\n    } catch (err) {\n        console.log(err);\n    }\n\n}\n","import { connect } from 'react-redux'\r\n\r\nimport React, { Component } from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { Button, TextField } from '@material-ui/core';\r\n\r\nimport { loadToys, addToy, editToy } from '../store/actions/toyActions'\r\nimport { toyService } from '../services/toyService';\r\nimport { cloudinaryService } from '../services/cloudinaryService';\r\n\r\n\r\n\r\nconst TextFieldOutlined = (props) => <TextField variant=\"outlined\" {...props} label={props.name} />\r\n\r\n\r\nexport class _ToyEdit extends Component {\r\n\r\n    state = {\r\n        toy: null\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        const { toyId } = this.props.match.params\r\n        if (toyId) {\r\n            toyService.getById(toyId)\r\n                .then(toy => { this.setState({ toy }) })\r\n        }\r\n        else {\r\n            this.setState({\r\n                toy: {\r\n                    name: '',\r\n                    price: '',\r\n                    type: ''\r\n                }\r\n            })\r\n\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.match.params.toyId !== this.props.match.params.toyId) return toyService.getById(this.props.match.params.toyId).then(toy => { this.setState({ toy }) })\r\n    }\r\n\r\n    async onUpdateImg(ev) {\r\n        const img = await cloudinaryService.uploadImg(ev)\r\n        let updatedToy = { ...this.state.toy }\r\n        updatedToy.imgUrl = img.secure_url\r\n        this.setState({ toy: updatedToy }, () => this.props.editToy(updatedToy))\r\n    }\r\n\r\n    render() {\r\n        const toy = this.state.toy\r\n        if (!toy) return <h1>loading</h1>\r\n        return (<div>\r\n\r\n            <Formik\r\n                initialValues={{ name: toy.name, price: toy.price, type: toy.type }}\r\n\r\n                validate={formValues => {\r\n                    // const errors = {};\r\n                    // if (!formValues.myEmail) {\r\n                    //     errors.myEmail = 'Required';\r\n                    // } else if (\r\n                    //     !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(formValues.myEmail)\r\n                    // ) {\r\n                    //     errors.myEmail = 'Invalid email address';\r\n                    // }\r\n                    // if (!formValues.password) errors.password = 'Password is required'\r\n                    // return errors;\r\n                }}\r\n\r\n                onSubmit={(values, { setSubmitting }) => {\r\n                    this.setState({ toy: { ...toy, ...values } }, () => {\r\n                        this.props.addToy(this.state.toy)\r\n                        setSubmitting(false)\r\n                    })\r\n                    this.props.history.push('/toy')\r\n                }}\r\n            >\r\n                {({ isSubmitting }) => (\r\n                    <Form className=\"flex column justify-center align-center\">\r\n                        <h1>Add new Toy</h1>\r\n                        <Field type=\"text\" name=\"name\" as={TextFieldOutlined} />\r\n                        <ErrorMessage name=\"name\" component=\"span\" />\r\n                        <Field type=\"number\" name=\"price\" as={TextFieldOutlined} />\r\n                        <ErrorMessage name=\"price\" component=\"span\" />\r\n                        <Field as=\"select\" name=\"type\">\r\n                            <option value=\"\"></option>\r\n                            <option value=\"Adult\">Adult</option>\r\n                            <option value=\"Educational\">Educational</option>\r\n                            <option value=\"Funny\">Funny</option>\r\n                        </Field>\r\n\r\n                        <label style={{ cursor: 'pointer' }}> Upload Photo!\r\n                        <input onChange={(ev) => this.onUpdateImg(ev)} type=\"file\" hidden />\r\n                        </label>\r\n\r\n                        <Button type=\"submit\" disabled={isSubmitting}>\r\n                            Submit\r\n                        </Button>\r\n                        <Button type=\"submit\" onClick={() => this.props.history.goBack()}>\r\n                            back\r\n                        </Button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div >)\r\n\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys\r\n\r\n    }\r\n}\r\n\r\n\r\nconst mapDispatchToProps = {\r\n    loadToys,\r\n    addToy,\r\n    editToy\r\n}\r\n\r\nexport const ToyEdit = connect(mapStateToProps, mapDispatchToProps)(_ToyEdit)","import React, { Component } from 'react'\r\nimport { Pie, Line } from 'react-chartjs-2';\r\nimport { connect } from 'react-redux'\r\nimport { loadToys, addToy } from '../store/actions/toyActions'\r\n\r\n\r\nexport class _Home extends Component {\r\n\r\n    componentDidMount() {\r\n        this.props.loadToys()\r\n    }\r\n\r\n    getToysDataByType = () => {\r\n        let chartByType = this.props.toys.reduce((acc, toy) => {\r\n            if (toy.type === 'Adult') acc[0] += +toy.price;\r\n            else if (toy.type === 'Educational') acc[1] += +toy.price;\r\n            else if (toy.type === 'Funny') acc[2] += +toy.price;\r\n            return acc\r\n        }, [0, 0, 0])\r\n        return chartByType;\r\n    }\r\n\r\n    getToysDataByYear = () => {\r\n        const mapByYear = this.props.toys.reduce((acc, toy) => {\r\n            let toyCreationDate = new Date(toy.createdAt)\r\n            let toyCreationYear = toyCreationDate.getFullYear()\r\n            acc[toyCreationYear] = acc[toyCreationYear] ? acc[toyCreationYear] + 1 : 1\r\n            return acc\r\n        }, {})\r\n\r\n        let years = Object.keys(mapByYear)\r\n        let values = Object.values(mapByYear)\r\n\r\n        return { years, values }\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { toys } = this.props\r\n        if (!toys.length) return <h1>loading</h1>\r\n        const dataPrice = {\r\n            labels: ['Adult', 'Educational', 'Funny'],\r\n            datasets: [\r\n                {\r\n                    label: 'Sales per year',\r\n                    backgroundColor: ['#b2f0d4',\r\n                        '#2d30b4',\r\n                        '#88ccd9'],\r\n                    borderColor: 'rgba(255,99,132,1)',\r\n                    borderWidth: 1,\r\n                    hoverBackgroundColor: '#6ceff0',\r\n                    data: this.getToysDataByType()\r\n                }\r\n            ]\r\n        };\r\n        const toysByYear = this.getToysDataByYear()\r\n        const dataYear = {\r\n            labels: toysByYear.years,\r\n            datasets: [\r\n                {\r\n                    label: 'Sales per year',\r\n                    backgroundColor: 'lightBlue',\r\n                    borderColor: 'rgba(255,99,132,1)',\r\n                    borderWidth: 1,\r\n                    hoverBackgroundColor: 'rgba(255,99,132,0.4)',\r\n                    hoverBorderColor: 'rgba(255,99,132,1)',\r\n                    data: toysByYear.values\r\n                }\r\n            ]\r\n        };\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"welcome-div flex column\">\r\n                    <div className=\"welcome-txt flex column justify-center\">\r\n                    <h1>Welcome to <span>MisterToy</span></h1>\r\n                    <p>our toys are the best on the planet! Lorem ipsum dolor sit amet consectetur adipisicing elit. Voluptatum atque dolores optio saepe repellendus, corporis, possimus quod nemo dicta ratione explicabo unde? Minima, nulla ea! Ut vitae repudiandae reiciendis natus.</p>\r\n\r\n                    </div>\r\n                    {/* <img src={require('../assets/img/woody-img.png')} alt=\"\"/> */}\r\n                </div>\r\n                <div className=\"chart-container flex flex-wrap\">\r\n                    <Pie data={dataPrice} />\r\n                    <Line data={dataYear} />\r\n                </div>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        toys: state.toyReducer.toys\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    loadToys,\r\n    addToy\r\n}\r\n\r\nexport const Home = connect(mapStateToProps, mapDispatchToProps)(_Home)\r\n\r\n\r\n","import React from 'react'\r\nimport { GoogleApiWrapper, Map, Marker } from 'google-maps-react';\r\nimport { Button } from '@material-ui/core';\r\n\r\n\r\n// const style = {\r\n//     width: '100%',\r\n//     height: '50%'\r\n// }\r\nclass _GoogleMap extends React.Component {\r\n\r\n    state = {\r\n        center: {},\r\n        store1Coord: {\r\n            lat: 32.0853,\r\n            lng: 34.7818\r\n        },\r\n        store2Coord: {\r\n            lat: 32.790509,\r\n            lng: 34.967076\r\n        },\r\n        store3Coord: {\r\n            lat: 33.004200,\r\n            lng: 35.087510\r\n        }\r\n    }\r\n\r\n    centerByStor = (storCoord) => {\r\n        this.setState({ center: this.state[storCoord] })\r\n    }\r\n\r\n\r\n    onMarkerClick = (props, marker, event) => {\r\n        console.log('props:', props, ' marker:', marker, 'event', event)\r\n        const center = { lat: props.position.lat, lng: props.position.lng }\r\n        this.setState({ center });\r\n    }\r\n\r\n    onMapClicked = (mapProps, map, ev) => {\r\n        console.log('mapProps:', mapProps);\r\n        console.log('map:', map);\r\n        console.log('clickEvent:', ev);\r\n        this.setState({ lat: ev.latLng.lat(), lng: ev.latLng.lng() })\r\n    }\r\n\r\n    render() {\r\n        const containerStyle = {\r\n        position: 'relative',\r\n        width: '100%',\r\n        height: '500px',\r\n        border: '2px solid black',\r\n        marginBottom: '10px',\r\n        boxShadow: '15px 11px 9px 2px rgba(112,110,112,0.45)'\r\n    }\r\n        return (\r\n\r\n            < div className = \"map-container\" >\r\n                <Map containerStyle = { containerStyle } initialCenter={this.state.store2Coord} center={this.state.center} onClick={this.onMapClicked} google={this.props.google} zoom={8}>\r\n\r\n                    <Marker position={this.state.store1Coord}\r\n                        name={'store 1 location'} onClick={() => this.onMarkerClick} />\r\n                    <Marker position={this.state.store2Coord}\r\n                        name={'store 2 location'} onClick={() => this.onMarkerClick} />\r\n                    <Marker position={this.state.store3Coord}\r\n                        name={'store 3 location'} onClick={() => this.onMarkerClick} />\r\n\r\n                    <div className=\"location-btns flex space-around\" >\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => this.centerByStor('store2Coord')}>\r\n                            Haifa Stor\r\n                </Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => this.centerByStor('store3Coord')}>\r\n                            Naharya Stor\r\n                </Button>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={() => this.centerByStor('store1Coord')}>\r\n                            TLV Stor\r\n                </Button>\r\n                    </div>\r\n\r\n                    {/* <InfoWindow position={this.state} visible={true}  >\r\n                    <div>\r\n                        <h1>INFO WINDOW</h1>\r\n                    </div>\r\n                </InfoWindow> */}\r\n                </Map>\r\n            </div >\r\n        );\r\n    }\r\n}\r\n\r\nexport const GoogleMap = GoogleApiWrapper({\r\n    apiKey: ('AIzaSyA7wFxeGayDFtxLfft53sDr7sMu9cj7Vio')\r\n})(_GoogleMap)","import React from 'react'\r\nimport { GoogleMap } from '../cmps/GoogleMap'\r\n\r\n\r\nexport function About() {\r\n    return (\r\n        <div>\r\n            <div className=\"map-container\">\r\n                <GoogleMap />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import httpService from './httpService'\r\n\r\n\r\n\r\nexport const userService= {\r\n    login,\r\n    logout,\r\n    signup,\r\n    getUsers,\r\n    getById,\r\n    remove,\r\n    update\r\n}\r\n\r\nfunction getUsers() {\r\n    return httpService.get('user')\r\n}\r\n\r\nfunction getById(userId) {\r\n    return httpService.get(`user/${userId}`)\r\n}\r\nfunction remove(userId) {\r\n    return httpService.delete(`user/${userId}`)\r\n}\r\n\r\nfunction update(user) {\r\n    return httpService.put(`user/${user._id}`, user)\r\n}\r\n\r\nasync function login(userCred) {\r\n    const user = await httpService.post('auth/login', userCred)\r\n    return _handleLogin(user)\r\n}\r\n\r\nasync function signup(userCred) {\r\n    const user = await httpService.post('auth/signup', userCred)\r\n    return _handleLogin(user)\r\n}\r\nasync function logout() {\r\n    await httpService.post('auth/logout');\r\n    sessionStorage.clear();\r\n}\r\n\r\nfunction _handleLogin(user) {\r\n    sessionStorage.setItem('user', JSON.stringify(user))\r\n    return user;\r\n}","import React from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport { AppBar, Toolbar } from '@material-ui/core';\r\nimport { connect } from 'react-redux';\r\nimport { logout } from '../store/actions/userActions';\r\n\r\nfunction _Header(props) {\r\n\r\n\r\nasync function onLogout() {\r\n    await props.logout()\r\n    props.history.push('/')\r\n}\r\n\r\n    const { loggedinUser } = props\r\n    return (\r\n        // <header className=\"main-header full\">\r\n        <AppBar position=\"static\" className=\"app-material-bar full main-container\">\r\n            <Toolbar className=\"main-nav flex space-between\">\r\n                <Link to=\"/\" className=\"logo\">MisterToy</Link>\r\n                {loggedinUser && <h1>Hello {loggedinUser.username}!</h1>}\r\n                <ul className=\"main-nav flex clean-list\">\r\n                    <Link to=\"/toy\"><div className=\"logo\">toys</div></Link>\r\n                    <Link to=\"/about\"><div className=\"logo\">about</div></Link>\r\n                    {/* <li className=\"link flex align-center\">Link3</li> */}\r\n                    {!loggedinUser && <Link to='/login'>Login</Link>}\r\n                    {!loggedinUser && <Link to='/signup'>Signup</Link>}\r\n                    \r\n                    {loggedinUser && <button onClick={() => onLogout()}>Logout</button>}\r\n                </ul>\r\n            </Toolbar>\r\n        </AppBar>\r\n\r\n    )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedinUser: state.userReducer.loggedinUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    logout\r\n}\r\n\r\nexport const Header = connect(mapStateToProps, mapDispatchToProps)(withRouter(_Header))\r\n\r\n","import { userService } from '../../services/userService'\r\n\r\n// export function loadUser() {\r\n//     return async dispatch => {\r\n//         const user = await userService.login()\r\n//         dispatch({ type: 'SET_USER', user })\r\n//     }\r\n// }\r\n\r\nexport function login(userCreds) {\r\n    return async dispatch => {\r\n        const user = await userService.login(userCreds)\r\n        dispatch({ type: 'SET_USER', user });\r\n    }\r\n}\r\nexport function logout() {\r\n    return async dispatch => {\r\n        await userService.logout()\r\n        dispatch({ type: 'SET_USER', user: null });\r\n    }\r\n}\r\n\r\nexport function signup(userCreds) {\r\n    return async dispatch => {\r\n      const user = await userService.signup(userCreds);\r\n      dispatch({ type: 'SET_USER', user });\r\n    };\r\n  }\r\n\r\n\r\nexport function editUser(user) {\r\n    return dispatch => {\r\n        userService.edit(user)\r\n            .then(user => {\r\n                dispatch({ type: 'UPDATE_USER', user })\r\n            })\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function addToCart(todo) {\r\n    return dispatch => dispatch({ type: 'ADD_TO_CART', todo })\r\n}\r\nexport function clearCart() {\r\n    return dispatch => dispatch({ type: 'CLEAR_CART' })\r\n}\r\n","\r\nimport React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { login } from '../store/actions/userActions';\r\n\r\nexport class _Login extends React.Component {\r\n\r\n    state = {\r\n        user: {\r\n            username: '',\r\n            password: ''\r\n        }\r\n    }\r\n\r\n    onChange = (ev) => {\r\n        this.setState({ user: { ...this.state.user, [ev.target.name]: ev.target.value } })\r\n    }\r\n\r\n    onLogin = async (ev) => {\r\n        ev.preventDefault()\r\n        await this.props.login(this.state.user)\r\n        this.props.history.push('/toy')\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"flex column\">\r\n                <form className=\"flex space-between align-center column\" onSubmit={this.onLogin}>\r\n                    <h1>Login</h1>\r\n                    <input type=\"text\" name=\"username\" onChange={this.onChange} placeholder=\"Your user name\" />\r\n                    <input type=\"password\" name=\"password\" onChange={this.onChange} placeholder=\"password\" />\r\n                    <button className=\"submit\">submit</button>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        loggedinUser: state.userReducer.loggedinUser\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n    login\r\n}\r\n\r\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login)\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\n\r\nimport { connect } from 'react-redux'\r\nimport { signup } from '../store/actions/userActions'\r\n\r\nclass _Signup extends React.Component {\r\n    state = {\r\n        user: {\r\n            username: '',\r\n            fullName: '',\r\n            password: ''\r\n        }\r\n    }\r\n    onChange = (ev) => {\r\n        this.setState({ user: { ...this.state.user, [ev.target.name]: ev.target.value } })\r\n    }\r\n\r\n    onSignup = async (ev) => {\r\n        ev.preventDefault();\r\n        const { username, fullName, password } = this.state.user;\r\n        if (!username || !fullName || !password) return;\r\n        const signupCreds = { username, fullName, password };\r\n        await this.props.signup(signupCreds);\r\n        this.setState({ user: { username: '', fullName: '', password: '' } }, () => this.props.history.push('/toy'));\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <form className=\"signup-form flex column align-center\" onSubmit={this.onSignup}>\r\n                <h1>Signup</h1>\r\n                <input name=\"fullName\" type=\"text\" placeholder=\"full Name\" onChange={this.onChange} />\r\n                <input name=\"username\" type=\"text\" placeholder=\"User Name\" onChange={this.onChange} />\r\n                <input name=\"password\" type=\"password\" placeholder=\"Password\" onChange={this.onChange} />\r\n                <button>Signup</button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        user: state.userReducer.loggedinUser,\r\n    }\r\n}\r\nconst mapDispatchToProps = {\r\n    signup\r\n}\r\n\r\nexport const Signup = connect(mapStateToProps, mapDispatchToProps)(_Signup)","import React from 'react';\nimport { Switch, Route } from 'react-router-dom'\n\nimport { ToyApp } from './pages/ToyApp';\nimport { ToyDetails } from './pages/ToyDetails';\nimport { ToyEdit } from './pages/ToyEdit'\nimport { Home } from './pages/Home'\nimport { About } from './pages/About'\nimport { Header } from './cmps/Header';\nimport { Login } from './pages/Login';\nimport { Signup } from './pages/Signup';\n\n\nfunction App() {\n  return (\n    <div className=\"App main-container\">\n      <Header />\n      <main className=\"full main-container\">\n\n        <Switch>\n          <Route component={ToyEdit} path='/toy/edit/:toyId?' />\n          <Route component={ToyDetails} path='/toy/:toyId' />\n          <Route component={ToyApp} path='/toy' />\n          <Route component={Login} path='/login' />\n          <Route component={Signup} path='/signup' />\n          <Route component={About} path='/about' />\n          <Route component={Home} path='/' />\n        </Switch>\n      </main>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initialState = {\r\n  reviews: [],\r\n};\r\n\r\nexport default function(state = initialState, action = {}) {\r\n  switch (action.type) {\r\n    case 'SET_REVIEWS':\r\n      return { ...state, reviews: action.reviews };\r\n    case 'REVIEW_ADD':\r\n      return { ...state, reviews: [...state.reviews, action.review] };\r\n    case 'REVIEW_UPDATE':\r\n      return {\r\n        ...state,\r\n        reviews: state.reviews.map(review =>\r\n          review._id === action.review._id ? action.review : review\r\n        )};\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","const initialState = {\r\n    toys: []\r\n}\r\n\r\nexport function toyReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_TOYS':\r\n            return {\r\n                ...state,\r\n                toys: action.toys\r\n            }\r\n        case 'REMOVE_TOY':\r\n            const toys = state.toys.filter(toy => toy._id !== action.id)\r\n            return { ...state, toys }\r\n        case 'ADD_TOY':\r\n            let newToys = state.toys.slice()\r\n            newToys.push(action.toy)\r\n            return { ...state, toys: newToys }\r\n        case 'EDIT_TOY':\r\n            {\r\n                const toyIdx = state.toys.findIndex((toy) => toy._id === action.toy._id)\r\n                const updateToys = state.toys.slice()\r\n                updateToys[toyIdx] = action.toy\r\n                return { ...state, toys: updateToys }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","let localLoggedinUser = null;\r\nif (sessionStorage.user) localLoggedinUser = JSON.parse(sessionStorage.user);\r\n\r\nconst initialState = {\r\n    loggedinUser: localLoggedinUser\r\n}\r\n\r\nexport function userReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case 'SET_USER':\r\n            return { ...state, loggedinUser: action.user }\r\n        case 'UPDATE_USER':\r\n            return { ...state, loggedinUser: action.loggedinUser }\r\n        //     case 'SPEND_BALANCE':\r\n        //         return {\r\n        //             ...state,\r\n        //             loggedinUser: {\r\n        //                 ...state.loggedinUser,\r\n        //                 balance: state.loggedinUser.balance - action.spendAmount\r\n        //             }\r\n        //         }\r\n        //     case 'ADD_TO_CART':\r\n        //         return {\r\n        //             ...state,\r\n        //             cartItems: [...state.cartItems, action.item]\r\n        //         }\r\n        //     case 'CLEAR_CART':\r\n        //         return { ...state, cartItems: [] }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}","import {createStore, applyMiddleware, compose, combineReducers} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport reviewReducer from './reducers/reviewReducer';\r\nimport { toyReducer } from './reducers/toyReducer';\r\nimport { userReducer } from './reducers/userReducer';\r\n\r\n\r\nconst mainReducer = combineReducers({\r\n    toyReducer,\r\n    userReducer,\r\n    reviewReducer\r\n})\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport const store = createStore(mainReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App.jsx';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'react-redux'\nimport { HashRouter as Router } from 'react-router-dom'\n\nimport { store } from './store/store';\nimport './assets/scss/global.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <App />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}